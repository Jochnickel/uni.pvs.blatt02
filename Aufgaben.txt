zu Aufgabe 1.1:
alle Objektvariablen müssen final sein.

Aufgabe 1.2:
Es ist sinnvoll, immutables zu verwenden, da man sich damit Null-Checks bzw. validierung der Variablen spart. Auch kann man bedenkenlos das Objekt mehrfach gleichzeitig aufrufen, ohne dass sich das Objekt unvorhergesehen ändert.

Aufgabe 1.3:
Es ist schwer zu garantieren, dass generische Klassen komplett immutable sind, da man sie mit Arrays/Objekten "füttern" kann, die nicht immutable sind.
Damit ist nur die Objektreferenz unverändert.

Aufgabe 2: Coolections

Eine Collection implementiert nicht das Comparable-Interface oder eine andere Möglichket, seine Elemente zu vergleichen. Es könnte z.B. die Objekte "Blau" und "Rot" enthalten, für die es keine sinnfällige Sortierung gibt.

